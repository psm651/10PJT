<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="com.model2.mvc.service.domain.Product">
		<result property="fileName" 			column="image_file" 				jdbcType="VARCHAR"/>
		<result property="manuDate"		column="manufacture_day" 		jdbcType="VARCHAR" />
		<result property="price" 				column="price" 						jdbcType="NUMERIC" />
		<result property="prodDetail" 		column="prod_detail" 				jdbcType="VARCHAR" />
		<result property="prodName" 		column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodNo" 			column="prod_no" 				jdbcType="NUMERIC" />
		<result property="regDate" 			column="reg_date" 				jdbcType="VARCHAR" />
		<result property="proTranCode" 	column="tran_status_code" 		jdbcType="NUMERIC"  />
		<result property="stock" 				column="stock" 					jdbcType="NUMERIC"  />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="com.model2.mvc.service.domain.Product" >
	 	INSERT
		INTO product( prod_no , prod_name , prod_detail , manufacture_day , price, image_file, reg_date,stock) 
		VALUES	 (seq_product_prod_no.nextval, #{prodName} , #{prodDetail} , TO_DATE(#{manuDate},'YYYY-MM-DD'), #{price:INTEGER} , 
							#{fileName} , SYSDATE, #{stock})
	 </insert>
	
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT p.prod_no, p.prod_name, p.image_file, p.prod_detail, p.manufacture_day, p.price, p.reg_date, t.tran_status_code,p.stock
		 FROM product p, transaction t 
		 WHERE p.prod_no = t.prod_no(+) AND p.prod_no= #{value}
	 </select>
	
	  <!--  SQL : UPDATE-->
	 <update	id="updateProduct"	parameterType="com.model2.mvc.service.domain.Product"  >
	   	UPDATE product
	   	<set>
			prod_name	=	 #{prodName},
			prod_detail 	= 	#{prodDetail} ,
			manufacture_day	=	TO_DATE(#{manuDate},'YYYY-MM-DD'),
			price	=	#{price:INTEGER},
			stock  =  #{stock}
			 <if test="fileName != '' ">
			,image_file	=	#{fileName}
			</if>
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		    
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM (SELECT p.prod_no , p.prod_name, p.prod_detail, p.manufacture_day, p.price, p.image_file, p.reg_date, t.tran_status_code 
	  								FROM product p, transaction t 
											<where>
												 	p.prod_no=t.prod_no(+)
												 	
												 <if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				 AND p.prod_no LIKE '%'||#{searchKeyword}||'%' 
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				 AND p.prod_name LIKE '%'||#{searchKeyword}||'%' 
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				AND p.price LIKE '%'||#{searchKeyword}||'%'
													</if>
												</if>
												</where>
											<choose>
											<when test="order !=null and order=='priceDesc'">
												order by p.price Desc
											</when>
											<when test="order != null and order == 'priceAsc' ">
												order by p.price Asc
											</when>
											<otherwise>
												order by p.prod_no
											</otherwise> </choose>
											) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	 <!-- 위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		 -->

		<!-- SQL : SELECT ROW Count	    -->
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day, p.price, p.image_file, p.reg_date, t.tran_status_code 
	  	FROM product p, transaction t 
											<where>
												 	p.prod_no=t.prod_no(+)
												 	
												 <if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				 AND p.prod_no LIKE '%'||#{searchKeyword}||'%' 
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				 AND p.prod_name LIKE '%'|| #{searchKeyword}||'%' 
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				AND p.price LIKE '%'||#{searchKeyword}||'%'
													</if>
													</if>
												</where>
											<choose>
											<when test="order !=null and order=='priceDesc'">
												order by p.price Desc
											</when>
											<when test="order != null and order == 'priceAsc' ">
												order by p.price Asc
											</when>
											<otherwise>
												order by p.prod_no
											</otherwise> </choose>) countTable						
	 </select>
	
</mapper>